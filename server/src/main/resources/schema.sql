CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(512) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    CONSTRAINT pk_category PRIMARY KEY (id),
    CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    initiator_id BIGINT,
    annotation VARCHAR(2000),
    category_id BIGINT,
    description VARCHAR(7000),
    created TIMESTAMP WITHOUT TIME ZONE,
    published TIMESTAMP WITHOUT TIME ZONE,
    event_date TIMESTAMP WITHOUT TIME ZONE,
    paid BOOLEAN,
    participant_limit BIGINT,
    request_moderation BOOLEAN,
    state VARCHAR(64),
    title VARCHAR(120),
    latitude FLOAT,
    longitude FLOAT,
    CONSTRAINT pk_event PRIMARY KEY (id),
    CONSTRAINT FK_EVENT_ON_INITIATOR FOREIGN KEY (initiator_id) REFERENCES users (id),
    CONSTRAINT FK_EVENT_ON_CATEGORY FOREIGN KEY (category_id) REFERENCES categories (id)
);

CREATE TABLE IF NOT EXISTS participation_requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_id BIGINT NOT NULL,
    requester_id BIGINT NOT NULL,
    created VARCHAR(64),
    status VARCHAR(64),
    CONSTRAINT pk_participation_request PRIMARY KEY (id),
    CONSTRAINT FK_PARTICIPATION_REQUEST_ON_EVENT FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT FK_PARTICIPATION_REQUEST_ON_REQUESTER FOREIGN KEY (requester_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned BOOLEAN,
    title VARCHAR(255),
    CONSTRAINT pk_compilation PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS event_compilation (
    compilation_id BIGINT,
    event_id BIGINT,
    CONSTRAINT pk_event_compilation PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT FK_EVENT_COMPILATION_ON_COMPILATION FOREIGN KEY (compilation_id) REFERENCES compilations (id),
    CONSTRAINT FK_EVENT_COMPILATION_ON_EVENT FOREIGN KEY (event_id) REFERENCES events (id)
)